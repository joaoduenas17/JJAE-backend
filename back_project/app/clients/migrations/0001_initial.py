# Generated by Django 3.2.7 on 2023-06-22 22:42

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('logo', models.ImageField(blank=True, default='', null=True, upload_to='logos')),
                ('logo_menu', models.ImageField(blank=True, default='', null=True, upload_to='logos')),
                ('logo_footer', models.ImageField(blank=True, default='', null=True, upload_to='logos')),
                ('url_web', models.URLField(blank=True, default='', null=True)),
                ('email', models.EmailField(max_length=254)),
                ('province', models.CharField(max_length=50)),
                ('town', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=100)),
                ('owner', models.CharField(blank=True, max_length=255, null=True)),
                ('platform_name', models.CharField(blank=True, max_length=255, null=True)),
                ('client_login_id', models.UUIDField(default=uuid.uuid4)),
                ('has_web', models.BooleanField(default=True)),
                ('has_app', models.BooleanField(default=False)),
                ('update_client_status', models.BooleanField(default=False)),
                ('has_own_style', models.BooleanField(default=False)),
                ('unsubscribe_msg', models.CharField(blank=True, max_length=2000, null=True)),
                ('default_coins_user', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalOauth2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_id', models.CharField(blank=True, default='', max_length=100)),
                ('scope', models.CharField(blank=True, default='', max_length=100)),
                ('state', models.CharField(blank=True, default='', max_length=100)),
                ('redirect_uri', models.URLField(blank=True, default='', null=True)),
                ('grant_type', models.CharField(blank=True, default='', max_length=100)),
                ('endpoint', models.URLField(blank=True, default='', null=True)),
                ('endpoint_user_info', models.URLField(blank=True, default='', null=True)),
                ('authorize_endpoint', models.URLField(blank=True, default='', null=True)),
                ('endpoint_logout', models.URLField(blank=True, default='', null=True)),
                ('secret_id', models.CharField(blank=True, default='', max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Externals oauth2',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=200)),
                ('response', models.TextField(max_length=1000)),
                ('is_generic', models.BooleanField(default=False)),
                ('clients', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100, null=True), blank=True, default=list, size=None)),
                ('order', models.IntegerField(default=0)),
                ('product_type', models.IntegerField(choices=[(1, 'Películas'), (2, 'Revistas'), (2, 'Genéricos')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='NewsLetterSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=70, unique=True)),
            ],
            options={
                'verbose_name_plural': 'New letter Subscriptions',
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carrusel_type', models.IntegerField(choices=[(1, 'Por defecto'), (2, 'Reducido')], default=1)),
                ('menu_style', models.IntegerField(choices=[(1, 'Por defecto'), (2, 'The Shelf')], default=1)),
                ('plataform_type', models.IntegerField(choices=[(1, 'Único'), (2, 'Multiple')], default=1)),
                ('has_chat', models.BooleanField(default=False)),
                ('has_streaming', models.BooleanField(default=False)),
                ('show_date_renovation', models.BooleanField(default=False)),
                ('has_sso', models.BooleanField(default=False)),
                ('has_redirect', models.BooleanField(default=False)),
                ('user_registration', models.BooleanField(default=False)),
                ('client_registration', models.BooleanField(default=False)),
                ('external_registration', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='WebService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, max_length=50)),
                ('endpoint', models.URLField()),
                ('endpoint_details', models.URLField(blank=True, default='')),
                ('method', models.CharField(blank=True, max_length=10)),
                ('field_id', models.CharField(max_length=25)),
                ('field_pass', models.CharField(max_length=25)),
                ('field_detail', models.CharField(blank=True, max_length=150)),
            ],
            options={
                'verbose_name_plural': 'Web services',
            },
        ),
        migrations.CreateModel(
            name='TextTermsCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='terms_conditions', to='clients.client')),
            ],
        ),
        migrations.CreateModel(
            name='TextGeneralCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='general_conditions', to='clients.client')),
            ],
        ),
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, default='')),
                ('type', models.IntegerField(choices=[(1, 'Facebook'), (2, 'Twitter'), (3, 'Instagram'), (4, 'Youtube')], default=1)),
                ('active', models.BooleanField(default=True)),
                ('icon', models.ImageField(upload_to='icons')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.client')),
            ],
        ),
        migrations.CreateModel(
            name='SingleColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images')),
                ('color', models.CharField(blank=True, max_length=15, null=True)),
                ('color_name', models.CharField(blank=True, max_length=35, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.client')),
            ],
        ),
        migrations.CreateModel(
            name='ClientFAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.client')),
                ('faq', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.faq')),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='oauth2_external',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clients.externaloauth2'),
        ),
        migrations.AddField(
            model_name='client',
            name='setting',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client', to='clients.setting'),
        ),
        migrations.AddField(
            model_name='client',
            name='sites',
            field=models.ManyToManyField(related_name='clients', to='sites.Site'),
        ),
        migrations.AddField(
            model_name='client',
            name='web_service',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clients.webservice'),
        ),
    ]
